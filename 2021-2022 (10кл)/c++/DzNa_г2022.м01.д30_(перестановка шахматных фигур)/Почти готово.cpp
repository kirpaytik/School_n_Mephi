#include <iostream>
using namespace std;

// 0 = пусто
// 1 = пешка
// 2 = ладья
// 3 = конь
// 4 = слон
// 5 = ферзь
// 6 = король

//ПОЛЕ a1 ЧЁРНОЕ
int pole[8][8] = {0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0, 0, 0, 0, 0, 0,
                  1, 1, 1, 1, 1, 1, 1, 1,
                  2, 3, 4, 5, 6, 4, 3, 2};

string vivodpole[33][33] = {"+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+",
                            "|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|"," "," "," ","|",
                            "+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+","-","-","-","+"};

int turnNum = 0;

int sign(int x)
{
    return (x>0  ?  1  :  -1);
}

void moveP(string a, string b)
{
    turnNum++;
    int j1 = (int)(a[0] - 97);
    int i1 = (int)(a[1]) - 48;                           // НЕ ЗАБЫТЬ ПРО [i]=8-i
    int j2 = (int)(b[0] - 97);
    int i2 = (int)(b[1]) - 48;
   
    // cout << j1 << " " << i1 << "\t" << j2 << " " << i2 << endl;

    if (pole[8-i2][j2] == 0   and   j1 == j2)
    {
        if (i2-i1 == 1)
        {
            pole[8-i1][j1] = 0;
            pole[8-i2][j1] = 1;
        }
        else if (i2 == 4   and   pole[8-3][j2] == 0)
        {
            pole[8-i1][j1] = 0;
            pole[8-i2][j1] = 1;
        }
        else
            cout << "Невозможнен " << turnNum << "й ход Пешка 2" << endl;
    }
    else
        cout << "Невозможнен " << turnNum << "й ход Пешка 1" << endl;
}

void moveL(string a, string b, int figura)
{
    turnNum++;
    int j1 = (int)(a[0] - 97);
    int i1 = (int)(a[1]) - 48;                           // НЕ ЗАБЫТЬ ПРО [i]=8-i
    int j2 = (int)(b[0] - 97);
    int i2 = (int)(b[1]) - 48;
    
    // cout << j1 << " " << i1 << "\t" << j2 << " " << i2 << endl;

    if (j1 == j2)
    {
        int c = i1, flag = 0;
        c += sign(i2-i1);
        while (c != i2)
        {
            flag += pole[8-c][j1];
            c += sign(i2-i1);
        }
        flag += pole[8-c][j1];
        
        if (flag == 0)
        {
            pole[8-i1][j1] = 0;
            pole[8-i2][j2] = figura;
        }
        else
            cout << "Невозможнен " << turnNum << "й ход Ладья 2.1" << (figura==5  ?  "(ферзь)"  :  "") << endl;
    }
    else if (i1 == i2)
    {
        int c = j1, flag = 0;
        c += sign(j2-j1);
        while (c != j2)
        {
            flag += pole[8-i1][c];
            c += sign(j2-j1);
        }
        flag += pole[8-i1][c];
        
        if (flag == 0)
        {
            pole[8-i1][j1] = 0;
            pole[8-i2][j2] = figura;
        }
        else
            cout << "Невозможнен " << turnNum << "й ход Ладья 2.2" << (figura==5  ?  "(ферзь)"  :  "") << endl;
    }
    else
        cout << "Невозможнен " << turnNum << "й ход Ладья 1" << (figura==5  ?  "(ферзь)"  :  "") << endl;
}

void moveH(string a, string b)
{
    turnNum++;
    int j1 = (int)(a[0] - 97);
    int i1 = (int)(a[1]) - 48;                           // НЕ ЗАБЫТЬ ПРО [i]=8-i
    int j2 = (int)(b[0] - 97);
    int i2 = (int)(b[1]) - 48;
    
    // cout << j1 << " " << i1 << "\t" << j2 << " " << i2 << endl;
    
    if ((i2-i1)*(i2-i1) + (j2-j1)*(j2-j1) == 5)
    {
        if (pole[8-i2][j2] == 0)
        {
            pole[8-i1][j1] = 0;
            pole[8-i2][j2] = 3;
        }
        else
            cout << "Невозможнен" << turnNum << "й ход Конь 2" << endl;
    }
    else
        cout << "Невозможнен" << turnNum << "й ход  Конь 1" << endl;
}

void moveE(string a, string b, int figura)
{
    turnNum++;
    int j1 = (int)(a[0] - 97);
    int i1 = (int)(a[1]) - 48;                           // НЕ ЗАБЫТЬ ПРО [i]=8-i
    int j2 = (int)(b[0] - 97);
    int i2 = (int)(b[1]) - 48;
    
    // cout << j1 << " " << i1 << "\t" << j2 << " " << i2 << endl;
    
    if (abs(i2-i1) == abs (j2-j1))
    {
        int ci = i1, cj = j1, flag = 0;
        ci += sign(i2-i1);
        cj += sign(j2-j1);
        while (ci != i2)
        {
            flag += pole[8-ci][cj];
            ci += sign(i2-i1);
            cj += sign(j2-j1);
        }
        flag += pole[8-ci][cj];
        
        if (flag == 0)
        {
            pole[8-i1][j1] = 0;
            pole[8-i2][j2] = figura;
        }
        else
            cout << "Невозможнен " << turnNum << "й ход Слон 2" << (figura==5  ?  "(ферзь)"  :  "") << endl;
    }
    else
        cout << "Невозможнен " << turnNum << "й ход Слон 1" << (figura==5  ?  "(ферзь)"  :  "") << endl;
}

void moveQ(string a, string b)
{
    int j1 = (int)(a[0] - 97);
    int i1 = (int)(a[1]) - 48;                           // НЕ ЗАБЫТЬ ПРО [i]=8-i
    int j2 = (int)(b[0] - 97);
    int i2 = (int)(b[1]) - 48;
    
    // cout << j1 << " " << i1 << "\t" << j2 << " " << i2 << endl;
    
    if (i1 == i2  or  j1 == j2)
        moveL(a, b, 5);
    else if (abs(i2-i1) == abs(j2-j1))
        moveE(a, b, 5);
    else
        cout << "Невозможнен " << ++turnNum << "й ход Ферзь" << endl;
}

void moveK(string a, string b)
{
    turnNum++;
    int j1 = (int)(a[0] - 97);
    int i1 = (int)(a[1]) - 48;                           // НЕ ЗАБЫТЬ ПРО [i]=8-i
    int j2 = (int)(b[0] - 97);
    int i2 = (int)(b[1]) - 48;
    
    // cout << j1 << " " << i1 << "\t" << j2 << " " << i2 << endl;
    
    if (abs(i2-i1)<2  and  abs(j2-j1)<2  and  pole[8-i2][j2] == 0)
       {pole[8-i1][j1] = 0; pole[8-i2][j2] = 6;}
    else
        cout << "Невозможнен " << turnNum << "й ход Король" << endl;
}

void justMove (string a, string b)
{
    int a0 = (int)(a[0] - 97);
    int a1 = (int)(a[1]) - 48;
    
    if (pole[8-a1][a0] == 1)
        moveP(a,b);
    else if (pole[8-a1][a0] == 2)
        moveL (a, b, 2);
    else if (pole[8-a1][a0] == 3)
        moveH (a, b);
    else if (pole[8-a1][a0] == 4)
        moveE (a, b, 4);
    else if (pole[8-a1][a0] == 5)
        moveQ (a, b);
    else
        moveK (a, b);
}

void read()
{
    cout << "Вводите 2 клетки в каждой строке, в конце ввода - 0 0" << endl;
    string cell1, cell2;
    string nulstr = "0";
    int k11, k12;
    cin >> cell1 >> cell2;
    while (cell1 != nulstr)
    {
        if (cell1 == cell2)
            cout << "Невозможнен" << ++turnNum << "й ход" << endl;
        else
        {
            k11 = (int)(cell1[0] - 97);
            k12 = (int)(cell1[1]) - 48;
            
            if (pole[8-k12][k11] == 0)
                cout << "Невозможнен" << ++turnNum << "й ход" << endl;
            else
                justMove (cell1, cell2);
        }
        
        cin >> cell1 >> cell2;
    }
}

void vivod1()
{
    int numCell = 0;
    int i,j;
    for(i=0; i<17; i++)
    {
        if (i%2 == 0)
        {
            for (j=0; j<8; j++)
                cout << "+---";
            cout << "+" << endl;
        }
        // else if (i%2 == 1)
        // {
        //     for (j=0; j<16; j++)
        //         cout << (j%2 == 0  ?  "| "  :  "  ");
        //     cout << "|" << endl;
        // }
        else
        {
            for (j=0; j<16; j++)
            {
                if (j%2 == 0)
                    cout << "| ";
                else
                {
                    cout << pole[numCell/8][numCell%8] << " ";
                    numCell++;
                }
                // cout << numCell << " " << pole[numCell/8][numCell%8] << endl;
                
            }
            cout << "|" << endl;
        }
    }
}

void vivod2()
{
    int numCell = 0;
    int i,j;
    for (i=0; i<8; i++)
        for (j=0; j<8; j++)
        {
            vivodpole[(i+1)*2-1][(j+1)*4-2] = to_string(pole[numCell/8][numCell%8]);
            numCell++;
        }
    for (i=0; i<17; i++)
    {
        for (j=0; j<33; j++)
            cout << vivodpole[i][j];
        cout << endl;
    }
}

int main()
{
    /*
    0 = пусто
    1 = пешка
    2 = ладья
    3 = конь
    4 = слон
    5 = ферзь
    6 = король
    */
    // moveP ("a2", "a4");
    // moveL ("a1", "a3", 2);
    // moveP ("h2", "h4");
    // moveL ("a3", "h3", 2);
    // moveH ("b1", "a3");
    // moveP ("e2", "e3");
    // // moveP ("e3", "e5");
    // moveE ("f1", "b5", 4);
    // moveE ("b5", "c6", 4);
    // moveE ("c6", "b5", 4);
    // moveQ ("d1", "f3");
    // moveQ ("f3", "f7");
    // // moveL ("h3", "e3", 2);
    // moveQ ("f7", "d5");
    // moveQ ("d5", "c5");
    // moveQ ("c5", "c4");
    // moveQ ("c4", "d3");
    // moveE ("b5", "a6", 4);
    // moveK ("e1", "e2");
    // moveK ("e2", "f3");
    // moveK ("f3", "g3");
    // moveK ("g3", "h2");
    
    read();
    
    /////////////////////////////       Сделать вывод, как просили
    for (int i=0; i<8; i++)
    {
        for (int j=0; j<8; j++)
            cout << pole[i][j] << " ";
        cout << endl;
    }
    
    vivod1();
    
   
    return 0;
}